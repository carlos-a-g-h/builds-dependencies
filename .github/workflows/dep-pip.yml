name: PIP packages

on:
  workflow_dispatch:
    inputs:
      THE_URL:
        description: Direct link to a requirements.txt file
        required: true
        type: string

      THE_NAME:
        description: Short name for this bundle of packages
        required: true
        type: string

      THE_RUNNER:
        description: The Github runner to use
        required: true
        type: choice
        options:
        - ubuntu-20.04
        - ubuntu-22.04
        - ubuntu-latest
        - windows-2019
        - windows-2022
        - windows-latest

      THE_PYTHON:
        description: Python version to use (3.10, 3.9.6, etc...)
        required: true
        type: string
        default: "3.9.6"

env:
  PIP_DL_SCR: "https://gist.github.com/carlos-a-g-h/c294236df4d769216a0f1af434666364/raw/339211fa5c5ff6b8d6b6d528d43223d9baf6e398/pip_dl_iter.py"

jobs:

  job1:

    name: The Job
    runs-on: "${{ inputs.THE_RUNNER }}"

    steps:

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: "${{ inputs.THE_PYTHON}}"

    - name: Download some things first (Linux)
      if: runner.os == 'Linux'
      run: |
        wget "${{ inputs.THE_URL }}" -O requirements.txt
        wget "${{ emv.PIP_DL_SCR }}" -O pip_down.py

    - name: Download some things first (Windows)
      if: runner.os == 'Windows'
      run: |
        wget "${{ inputs.THE_URL }}" -OutFile requirements.txt
        wget "${{ emv.PIP_DL_SCR }}" -OutFile pip_down.py

    - name: Download packages listed on requirements.txt
      run: |
        mkdir "${{ inputs.THE_NAME }}"
        # pip download -r "requirements.txt" --no-binary :all: -d "${{ inputs.THE_NAME }}"
        python3 pip_down.py requirements.txt "${{ inputs.THE_NAME }}"

    - name: Pack it up (Linux)
      if: runner.os == 'Linux'
      run: |
        ls "${{ inputs.THE_NAME }}
        tar -cfv "${{ inputs.THE_NAME }}.tar" "${{ inputs.THE_NAME }}"
        ls

    - name: Pack it up (Windows)
      if: runner.os == 'Windows'
      run: |
        dir "${{ inputs.THE_NAME }}
        Compress-Archive -LiteralPath "${{ inputs.THE_NAME }}" -DestinationPath "${{ inputs.THE_NAME }}.zip"
        dir
